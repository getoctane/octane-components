{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": ["./tsconfig.json", "example/tsconfig.json"],
    "sourceType": "module",
    "ecmaVersion": 2020,
    "ecmaFeatures": {
      "legacyDecorators": true,
      "jsx": true
    }
  },
  "plugins": [
    "@typescript-eslint",
    "unused-imports",
    "import"
  ],
  "extends": [
    "standard",
    "standard-react",
    "plugin:prettier/recommended",
    "prettier/standard",
    "prettier/react",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:react-hooks/recommended",
    "plugin:import/recommended",
    "plugin:import/typescript"

  ],
  "env": {
    "browser": true,
    "es6": true,
    "node": true,
    "jest": true
  },
  "settings": {
    "react": {
      "version": "16"
    },
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true,
        "project": [
          "tsconfig.json",
          "example/tsconfig.json"
        ]
      }
    }
  },
  "overrides": [
    {
      "files": [
        "*.ts",
        "*.tsx"
      ],
      "extends": [
        "plugin:@typescript-eslint/recommended",
        "plugin:prettier/recommended"
      ],
      "rules": {
        "curly": [
          "error",
          "all"
        ],
        "react-hooks/rules-of-hooks": "error",
        "react-hooks/exhaustive-deps": "error",
        "react/jsx-props-no-spreading": "off",
        "react/jsx-fragments": "off",
        "prettier/prettier": [
          "error"
        ],
        "consistent-return": "error",
        "no-param-reassign": [
          "error",
          {
            "ignorePropertyModificationsFor": [
              "draft"
            ]
          }
        ],
        "react/require-default-props": "off",
        "import/prefer-default-export": "off",
        "import/no-extraneous-dependencies": ["error", {"devDependencies": true}],
        "no-console": [
          "error",
          {
            "allow": [
              "warn",
              "info",
              "error"
            ]
          }
        ],
        "@typescript-eslint/ban-types": [
          "error",
          {
            "types": {
              "object": null
            },
            "extendDefaults": true
          }
        ],
        "@typescript-eslint/camelcase": 0,
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "default",
            "format": [
              "camelCase",
              "UPPER_CASE",
              "PascalCase"
            ],
            "leadingUnderscore": "allow",
            "trailingUnderscore": "allow"
          },
          {
            "selector": "property",
            "format": [
              "camelCase",
              "snake_case", // for when we have to deal with API data
              "UPPER_CASE",
              "PascalCase"
            ],
            "leadingUnderscore": "allow",
            "trailingUnderscore": "allow"
          },
          {
            "selector": "variable",
            "format": [
              "camelCase",
              "UPPER_CASE",
              "PascalCase"
            ],
            "leadingUnderscore": "allow",
            "trailingUnderscore": "allow"
          },
          {
            "selector": "typeLike",
            "format": [
              "PascalCase"
            ],
            "leadingUnderscore": "allow"
          }
        ],
        "@typescript-eslint/consistent-type-assertions": ["error", {
          "assertionStyle": "never"
        }],
        "@typescript-eslint/no-explicit-any": ["error"],
        "@typescript-eslint/explicit-function-return-type": ["off"],
        "no-unused-vars": "off",
        "@typescript-eslint/no-unused-vars": ["error", {
          "varsIgnorePattern": "^[_]"
        }],
        "unused-imports/no-unused-imports": "error",
        "unused-imports/no-unused-vars": [
          "error",
          {
            "vars": "all",
            "varsIgnorePattern": "^_",
            "args": "after-used",
            "argsIgnorePattern": "^_"
          }
        ],
        "no-underscore-dangle": "off",
        "import/no-absolute-path": "error",
        "import/no-useless-path-segments": "error",
        "import/no-named-as-default": "off",
        "import/no-named-as-default-member": "off",
        "import/no-commonjs": "error",
        "import/no-amd": "error",
        "import/first": "error",
        "import/no-duplicates": "error"
      }
    }
  ]
}
